// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.0
// source: loyalty_core/api/api.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	LoyaltyCoreService_CreateNetwork_FullMethodName  = "/api.LoyaltyCoreService/CreateNetwork"
	LoyaltyCoreService_CreateMember_FullMethodName   = "/api.LoyaltyCoreService/CreateMember"
	LoyaltyCoreService_CreateMerchant_FullMethodName = "/api.LoyaltyCoreService/CreateMerchant"
)

// LoyaltyCoreServiceClient is the client API for LoyaltyCoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LoyaltyCoreServiceClient interface {
	CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*CreateNetworkResponse, error)
	CreateMember(ctx context.Context, in *CreateMemberRequest, opts ...grpc.CallOption) (*CreateMemberResponse, error)
	CreateMerchant(ctx context.Context, in *CreateMerchantRequest, opts ...grpc.CallOption) (*CreateMerchantResponse, error)
}

type loyaltyCoreServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLoyaltyCoreServiceClient(cc grpc.ClientConnInterface) LoyaltyCoreServiceClient {
	return &loyaltyCoreServiceClient{cc}
}

func (c *loyaltyCoreServiceClient) CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*CreateNetworkResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateNetworkResponse)
	err := c.cc.Invoke(ctx, LoyaltyCoreService_CreateNetwork_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loyaltyCoreServiceClient) CreateMember(ctx context.Context, in *CreateMemberRequest, opts ...grpc.CallOption) (*CreateMemberResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateMemberResponse)
	err := c.cc.Invoke(ctx, LoyaltyCoreService_CreateMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loyaltyCoreServiceClient) CreateMerchant(ctx context.Context, in *CreateMerchantRequest, opts ...grpc.CallOption) (*CreateMerchantResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateMerchantResponse)
	err := c.cc.Invoke(ctx, LoyaltyCoreService_CreateMerchant_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoyaltyCoreServiceServer is the server API for LoyaltyCoreService service.
// All implementations must embed UnimplementedLoyaltyCoreServiceServer
// for forward compatibility.
type LoyaltyCoreServiceServer interface {
	CreateNetwork(context.Context, *CreateNetworkRequest) (*CreateNetworkResponse, error)
	CreateMember(context.Context, *CreateMemberRequest) (*CreateMemberResponse, error)
	CreateMerchant(context.Context, *CreateMerchantRequest) (*CreateMerchantResponse, error)
	mustEmbedUnimplementedLoyaltyCoreServiceServer()
}

// UnimplementedLoyaltyCoreServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedLoyaltyCoreServiceServer struct{}

func (UnimplementedLoyaltyCoreServiceServer) CreateNetwork(context.Context, *CreateNetworkRequest) (*CreateNetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNetwork not implemented")
}
func (UnimplementedLoyaltyCoreServiceServer) CreateMember(context.Context, *CreateMemberRequest) (*CreateMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMember not implemented")
}
func (UnimplementedLoyaltyCoreServiceServer) CreateMerchant(context.Context, *CreateMerchantRequest) (*CreateMerchantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMerchant not implemented")
}
func (UnimplementedLoyaltyCoreServiceServer) mustEmbedUnimplementedLoyaltyCoreServiceServer() {}
func (UnimplementedLoyaltyCoreServiceServer) testEmbeddedByValue()                            {}

// UnsafeLoyaltyCoreServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LoyaltyCoreServiceServer will
// result in compilation errors.
type UnsafeLoyaltyCoreServiceServer interface {
	mustEmbedUnimplementedLoyaltyCoreServiceServer()
}

func RegisterLoyaltyCoreServiceServer(s grpc.ServiceRegistrar, srv LoyaltyCoreServiceServer) {
	// If the following call pancis, it indicates UnimplementedLoyaltyCoreServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&LoyaltyCoreService_ServiceDesc, srv)
}

func _LoyaltyCoreService_CreateNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyCoreServiceServer).CreateNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyCoreService_CreateNetwork_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyCoreServiceServer).CreateNetwork(ctx, req.(*CreateNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoyaltyCoreService_CreateMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyCoreServiceServer).CreateMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyCoreService_CreateMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyCoreServiceServer).CreateMember(ctx, req.(*CreateMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoyaltyCoreService_CreateMerchant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMerchantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyCoreServiceServer).CreateMerchant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyCoreService_CreateMerchant_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyCoreServiceServer).CreateMerchant(ctx, req.(*CreateMerchantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// LoyaltyCoreService_ServiceDesc is the grpc.ServiceDesc for LoyaltyCoreService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LoyaltyCoreService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.LoyaltyCoreService",
	HandlerType: (*LoyaltyCoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNetwork",
			Handler:    _LoyaltyCoreService_CreateNetwork_Handler,
		},
		{
			MethodName: "CreateMember",
			Handler:    _LoyaltyCoreService_CreateMember_Handler,
		},
		{
			MethodName: "CreateMerchant",
			Handler:    _LoyaltyCoreService_CreateMerchant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "loyalty_core/api/api.proto",
}
